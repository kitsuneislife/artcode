// Minimal finalizer example

func fin_promote() {
  let promoted = outside;
}

// Minimal finalizer example (self-contained)

let outside = [99];

func fin_promote() {
  // promote a reference to outside into a local binding
  let _promoted = outside;
}

// Create a target object and register a finalizer that references `outside`.
performant {
  let _target = [1,2,3];
  on_finalize(_target, fin_promote);
}

// Note: in the real runtime finalizers run asynchronously; this example demonstrates
// a finalizer registration that references an outer handle (`outside`).
